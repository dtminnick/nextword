% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ngram_predictor.R
\name{ngram_predictor}
\alias{ngram_predictor}
\title{Ngram Predictor}
\usage{
ngram_predictor(
  input_phrase,
  source,
  n = 3,
  dec_pos = 5,
  min_count = 1,
  simple = TRUE
)
}
\arguments{
\item{input_phrase}{A character string containing the text to be used to predict
the next word.}

\item{source}{A character vector with one element for each line of a text.}

\item{n}{An integer specifying the number of elements to be concatenated in each ngram.}

\item{dec_pos}{An integer specifying the number of positions following the
decimal to return for frequency and cumulative frequency.  Value of '5' returns
numbers with five positions following the decimal.}

\item{min_count}{An integer specifying the minimum count of ngrams to return, i.e.
min_count = 1 will return all ngrams with a count of 1 or more.}

\item{simple}{Boolean; if TRUE, then function will return a simple table including
ngram, count and frequency.  Otherwise, will return ngram, count, frequency, cumulative count
and cumulative frequency.  Default is TRUE.}
}
\value{
A data frame containing the ngrams matching the input phrase provided,
along with the count and frequency of each ngram.
}
\description{
\code{ngram_predictor} predicts the next word in a character string using an
input phrase and source content with which to construct an ngram model.
}
\examples{

data(faulkner)

input_phrase <- "it is"

next_word_table <- ngram_predictor(input_phrase,
                                   faulkner,
                                   n = 3,
                                   dec_pos = 3,
                                   min_count = 1,
                                   simple = TRUE)

}
